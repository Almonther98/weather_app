{"version":3,"file":"Dashboard.vue2.mjs","sources":["../../../../components/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gradient-to-br from-blue-400 to-indigo-600 rounded-2xl shadow-2xl overflow-hidden max-w-md mx-auto\">\r\n    <!-- Location header with time -->\r\n    <div class=\"p-6 text-center relative\">\r\n      <div class=\"absolute top-4 right-4 bg-white/20 px-3 py-1 rounded-full text-sm text-white backdrop-blur-sm\">\r\n        {{ getCurrentTime() }}\r\n      </div>\r\n      <h2 class=\"text-2xl font-bold text-white mt-2\">\r\n        {{ weather.location?.name || 'Your Location' }}\r\n      </h2>\r\n      <p class=\"text-blue-100 text-sm\" v-if=\"weather.location?.region\">\r\n        {{ weather.location.region }}, {{ weather.location.country }}\r\n      </p>\r\n    </div>\r\n    \r\n    <!-- Main Weather Display -->\r\n    <div class=\"relative px-6 pb-8 pt-2 text-center\">\r\n      <!-- Weather Icon -->\r\n      <div class=\"flex justify-center mb-4\">\r\n        <component :is=\"getWeatherIcon(weather.current.condition)\" class=\"h-16 w-16 text-white\" />\r\n      </div>\r\n      \r\n      <!-- Temperature and Condition -->\r\n      <div class=\"mb-6\">\r\n        <div class=\"flex items-center justify-center\">\r\n          <span class=\"text-7xl font-bold text-white tracking-tighter\">\r\n            {{ Math.round(weather.current.temp) }}\r\n          </span>\r\n          <span class=\"text-5xl font-light text-white ml-1\">Â°</span>\r\n        </div>\r\n        <div class=\"text-2xl font-medium text-white/90 mt-2\">\r\n          {{ weather.current.condition }}\r\n        </div>\r\n        <div class=\"text-sm text-blue-100 mt-2\">\r\n          {{ formatDate(weather.current.date) }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- Weather Details -->\r\n    <div class=\"bg-white/10 backdrop-blur-md p-4 grid grid-cols-2 gap-3 text-white\">\r\n      <div class=\"flex items-center p-3 rounded-xl bg-white/10\">\r\n        <div class=\"p-2 rounded-lg bg-blue-500/30 mr-3\">\r\n          <Wind class=\"h-5 w-5\" />\r\n        </div>\r\n        <div>\r\n          <div class=\"text-xs text-blue-100\">Wind</div>\r\n          <div class=\"font-semibold\">{{ weather.current.wind }} mph</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"flex items-center p-3 rounded-xl bg-white/10\">\r\n        <div class=\"p-2 rounded-lg bg-blue-500/30 mr-3\">\r\n          <Droplets class=\"h-5 w-5\" />\r\n        </div>\r\n        <div>\r\n          <div class=\"text-xs text-blue-100\">Humidity</div>\r\n          <div class=\"font-semibold\">{{ weather.current.humidity }}%</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"flex items-center p-3 rounded-xl bg-white/10\">\r\n        <div class=\"p-2 rounded-lg bg-blue-500/30 mr-3\">\r\n          <CloudRain class=\"h-5 w-5\" />\r\n        </div>\r\n        <div>\r\n          <div class=\"text-xs text-blue-100\">Precipitation</div>\r\n          <div class=\"font-semibold\">{{ weather.current.precipitation }} in</div>\r\n        </div>\r\n      </div>\r\n      \r\n      <div class=\"flex items-center p-3 rounded-xl bg-white/10\">\r\n        <div class=\"p-2 rounded-lg bg-blue-500/30 mr-3\">\r\n          <Gauge class=\"h-5 w-5\" />\r\n        </div>\r\n        <div>\r\n          <div class=\"text-xs text-blue-100\">Pressure</div>\r\n          <div class=\"font-semibold\">{{ weather.current.pressure }} hPa</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { Sun, Cloud, CloudRain, CloudSnow, CloudLightning, CloudFog, Wind, Droplets, Gauge } from 'lucide-vue-next';\r\n\r\ninterface WeatherData {\r\n  current: {\r\n    temp: number;\r\n    condition: string;\r\n    date: Date;\r\n    humidity: number;\r\n    wind: number;\r\n    precipitation: number;\r\n    pressure: number;\r\n  },\r\n  location?: {\r\n    name: string;\r\n    region: string;\r\n    country: string;\r\n  }\r\n}\r\n\r\nconst props = defineProps<{\r\n  weather: WeatherData\r\n}>();\r\n\r\nconst formatDate = (date: Date): string => {\r\n  const options: Intl.DateTimeFormatOptions = { \r\n    weekday: 'long', \r\n    month: 'short', \r\n    day: 'numeric' \r\n  };\r\n  return new Date(date).toLocaleDateString('en-US', options);\r\n};\r\n\r\nconst getCurrentTime = (): string => {\r\n  const now = new Date();\r\n  return now.toLocaleTimeString('en-US', { \r\n    hour: '2-digit', \r\n    minute: '2-digit',\r\n    hour12: true\r\n  });\r\n};\r\n\r\n// Weather icon functionality using Lucide icons\r\nconst getWeatherIcon = (condition: string) => {\r\n  const conditionLower = condition.toLowerCase();\r\n  \r\n  if (conditionLower.includes('rain') || conditionLower.includes('drizzle')) {\r\n    return CloudRain;\r\n  } else if (conditionLower.includes('cloud')) {\r\n    return Cloud;\r\n  } else if (conditionLower.includes('snow') || conditionLower.includes('ice')) {\r\n    return CloudSnow;\r\n  } else if (conditionLower.includes('storm') || conditionLower.includes('thunder')) {\r\n    return CloudLightning;\r\n  } else if (conditionLower.includes('fog') || conditionLower.includes('mist') || conditionLower.includes('haze')) {\r\n    return CloudFog;\r\n  } else {\r\n    return Sun;\r\n  }\r\n};\r\n</script>"],"names":[],"mappings":";;;;;;;;;;AA4GM,UAAA,aAAa,CAAC,SAAuB;AACzC,YAAM,UAAsC;AAAA,QAC1C,SAAS;AAAA,QACT,OAAO;AAAA,QACP,KAAK;AAAA,MACP;AACA,aAAO,IAAI,KAAK,IAAI,EAAE,mBAAmB,SAAS,OAAO;AAAA,IAC3D;AAEA,UAAM,iBAAiB,MAAc;AAC7B,YAAA,0BAAU,KAAK;AACd,aAAA,IAAI,mBAAmB,SAAS;AAAA,QACrC,MAAM;AAAA,QACN,QAAQ;AAAA,QACR,QAAQ;AAAA,MAAA,CACT;AAAA,IACH;AAGM,UAAA,iBAAiB,CAAC,cAAsB;AACtC,YAAA,iBAAiB,UAAU,YAAY;AAE7C,UAAI,eAAe,SAAS,MAAM,KAAK,eAAe,SAAS,SAAS,GAAG;AAClE,eAAA;AAAA,MACE,WAAA,eAAe,SAAS,OAAO,GAAG;AACpC,eAAA;AAAA,MAAA,WACE,eAAe,SAAS,MAAM,KAAK,eAAe,SAAS,KAAK,GAAG;AACrE,eAAA;AAAA,MAAA,WACE,eAAe,SAAS,OAAO,KAAK,eAAe,SAAS,SAAS,GAAG;AAC1E,eAAA;AAAA,MACE,WAAA,eAAe,SAAS,KAAK,KAAK,eAAe,SAAS,MAAM,KAAK,eAAe,SAAS,MAAM,GAAG;AACxG,eAAA;AAAA,MAAA,OACF;AACE,eAAA;AAAA,MAAA;AAAA,IAEX;;;;;;;;;;;;;;;;;;;;;;;"}