{"file":"index.vue2.mjs","mappings":";;;;;;;;;;;;;;AA6BQ,UAAA,UAAU,IAAa,IAAI;AAC3B,UAAA,QAAQ,IAAmB,IAAI;AAC/B,UAAA,cAAc,IAAwB,IAAI;AAE1C,UAAA,EAAE,YAAY,IAAI,YAAY;AAC9B,UAAA,EAAE,aAAa,IAAI,WAAW;AAEpC,UAAM,mBAAmB,YAA2B;AAClD,cAAQ,QAAQ;AAChB,YAAM,QAAQ;AAEV,UAAA;AAEF,cAAM,EAAE,UAAU,WAAW,KAAK,IAAI,MAAM,YAAY;AAGxD,cAAM,OAAO,MAAM,aAAa,UAAU,WAAW,QAAQ,EAAE;AAC/D,oBAAY,QAAQ;AAAA,eACb,KAAc;AACrB,YAAI,eAAe,OAAO;AACxB,gBAAM,QAAQ,IAAI;AAAA,QAAA,OACb;AACL,gBAAM,QAAQ;AAAA,QAAA;AAAA,MAChB,UACA;AACA,gBAAQ,QAAQ;AAAA,MAAA;AAAA,IAEpB;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["../../../../pages/index.vue"],"sourcesContent":["<template>\r\n    <div class=\"max-w-md w-full\">\r\n      <div v-if=\"error\" class=\"w-full\">\r\n        <ErrorMessage :message=\"error\" @retry=\"fetchWeatherData\" />\r\n      </div>\r\n      <div v-else-if=\"loading\" class=\"w-full flex justify-center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n      <Dashboard v-else-if=\"weatherData\" :weather=\"weatherData\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup lang=\"ts\">\r\n  import { ref, onMounted } from 'vue';\r\nimport { useLocation } from '~/composables/useLocation';\r\nimport { useWeather } from '~/composables/useWeather';\r\n  \r\n  interface WeatherData {\r\n    current: {\r\n      temp: number;\r\n      condition: string;\r\n      date: Date;\r\n      humidity: number;\r\n      wind: number;\r\n      precipitation: number;\r\n      pressure: number;\r\n    }\r\n  }\r\n  \r\n  const loading = ref<boolean>(true);\r\n  const error = ref<string | null>(null);\r\n  const weatherData = ref<WeatherData | null>(null);\r\n  \r\n  const { getLocation } = useLocation();\r\n  const { fetchWeather } = useWeather();\r\n  \r\n  const fetchWeatherData = async (): Promise<void> => {\r\n    loading.value = true;\r\n    error.value = null;\r\n    \r\n    try {\r\n      // Get user location\r\n      const { latitude, longitude, city } = await getLocation();\r\n      \r\n      // Fetch weather data based on location\r\n      const data = await fetchWeather(latitude, longitude, city || '');\r\n      weatherData.value = data;\r\n    } catch (err: unknown) {\r\n      if (err instanceof Error) {\r\n        error.value = err.message;\r\n      } else {\r\n        error.value = 'Failed to fetch weather data';\r\n      }\r\n    } finally {\r\n      loading.value = false;\r\n    }\r\n  };\r\n  \r\n  // Fetch weather data when component mounts\r\n  onMounted(fetchWeatherData);\r\n  </script>"],"version":3}